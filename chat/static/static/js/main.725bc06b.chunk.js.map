{"version":3,"sources":["components/AgentStatus.jsx","components/Details.jsx","components/Message.jsx","components/Chat.jsx","components/ProductList.jsx","components/Carousel.jsx","components/AgentHome.jsx","components/admin/Widget.jsx","components/admin/chart.jsx","components/admin/Main.jsx","components/admin/AdminHome.jsx","App.js","serviceWorker.js","index.js"],"names":["AgentStatus","props","className","src","alt","agentName","Details","style","fontWeight","width","paddingLeft","message","author","content","Chat","sendMessage","e","document","querySelector","value","chatSocket","send","JSON","stringify","handleKeyDown","key","state","chatMessages","roomName","WebSocket","this","onopen","console","log","onmessage","parse","data","arrMSG","push","setState","close","map","type","id","onKeyDown","Component","ProductList","products","product","index","image_url","image_alt","name","price","carousel","AgentHome","userDetails","addEventListener","fetch","href","Widget","label","amount","fontSize","uv","pv","amt","chart","height","dataKey","stroke","strokeDasharray","Main","widget","useStyles","makeStyles","theme","root","display","drawer","breakpoints","up","flexShrink","appBar","marginLeft","menuButton","marginRight","spacing","toolbar","mixins","drawerPaper","flexGrow","padding","ResponsiveDrawer","container","classes","useTheme","React","useState","mobileOpen","setMobileOpen","handleDrawerToggle","Divider","List","text","ListItem","button","ListItemIcon","ListItemText","primary","CssBaseline","AppBar","position","Toolbar","IconButton","color","aria-label","edge","onClick","Typography","variant","noWrap","Hidden","smUp","implementation","Drawer","anchor","direction","open","onClose","paper","ModalProps","keepMounted","xsDown","App","role","loggedIn","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.725bc06b.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport default function AgentStatus(props) {\r\n    return (\r\n        <div className=\"agent-area\">\r\n            <div>\r\n                <img src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcQ9MVF1euuahaAdL4r6Y4P4PaVdewuQlhn1MoPjL8bMEyJxI_Aq\" className=\"agent-avatar\" alt=\"agent-avatar\" />\r\n            </div>\r\n            <div className=\"agent-details\">\r\n                <div className=\"agent-name\">\r\n                    {props.agentName}\r\n                </div>\r\n                <div>\r\n                    <div className=\"status-bubble\" />\r\n                    Available\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Details() {\r\n    return (\r\n        <div className=\"details\">\r\n            <div className=\"details-item\"> <div style={{fontWeight:\"bold\" , width:\"110px\" , paddingLeft : \"5px\"}}>Customer</div><div> David </div></div>\r\n            <div className=\"details-item\"> <div style={{fontWeight:\"bold\" , width:\"110px\" , paddingLeft : \"5px\"}}>Skill</div> <div> Coffee machine</div></div>\r\n            <div className=\"details-item\"> <div style={{fontWeight:\"bold\" , width:\"110px\" , paddingLeft : \"5px\"}}>call duration</div> <div> 01:24 </div></div>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function message(props) {\r\n    return (\r\n        <div className={`chat-bubble ${props.author}`}>{props.content}</div>\r\n    )\r\n}\r\n","import React, { Component } from 'react'\r\nimport Message from './Message';\r\n\r\n\r\nexport default class Chat extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.props = props;\r\n        this.state = {\r\n            chatMessages: [],\r\n        };\r\n\r\n        this.roomName = 'chat1';\r\n        this.chatSocket = new WebSocket(`ws://127.0.0.1:8000/ws/chat/${this.roomName}/`);\r\n    }\r\n\r\n\r\n    sendMessage = (e) => {\r\n        const message = document.querySelector('#chat-message-input').value;\r\n        this.chatSocket.send(JSON.stringify({\r\n            'message': message,\r\n            'author': \"{{ user_name }}\",\r\n            'chat_id': \"{{ room_name|escapejs }}\"\r\n        }));\r\n    };\r\n\r\n    handleKeyDown = (e) =>{\r\n        if (e.key === 'Enter') {\r\n            this.sendMessage(e);\r\n            document.querySelector('#chat-message-input').value ='';\r\n          }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.chatSocket.onopen = (e) => {\r\n            console.log(e);\r\n        }\r\n\r\n        this.chatSocket.onmessage = (e) => {\r\n            const data = JSON.parse(e.data);\r\n            const message = data['message'];\r\n            console.log(message)\r\n            let arrMSG = [...this.state.chatMessages]\r\n            arrMSG.push(message)\r\n            this.setState({chatMessages: arrMSG})\r\n        };\r\n\r\n\r\n    }\r\n    componentWillUnmount() {\r\n        this.chatSocket.close();\r\n        this.chatSocket = null\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"chat-box\">\r\n                    {this.state.chatMessages.map((message) => {\r\n                        return(<Message content={message} author=\"sender\" />)\r\n                    })}\r\n\r\n                </div>\r\n                <div>\r\n                        <input type=\"text\" className=\"chat-input\" id=\"chat-message-input\" onKeyDown={this.handleKeyDown}/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\n\r\nexport default function ProductList(props) {\r\n    return (\r\n        <div className=\"products-list\">\r\n            {\r\n                props.products.map((product, index) => {\r\n                    return (\r\n                        <>\r\n                            <div className=\"product\" key={index} >\r\n                                <div className=\"product-pic\" >\r\n                                    <img src={product.image_url} alt={product.image_alt} className=\"product-image\"></img>\r\n                                </div>\r\n                                <div className=\"product-details\">\r\n                                    <div>{product.name} </div>\r\n                                    <div>{product.price}$</div>\r\n                                </div>\r\n                            </div>\r\n                        </>)\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport ProductList from './ProductList'\r\n\r\nexport default function carousel(props) {\r\n    return (\r\n        <div className=\"carousel\">\r\n            <h2> {'<'} Products ></h2>\r\n            <ProductList products={props.products}/>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport AgentStatus from './AgentStatus';\r\nimport Details from './Details';\r\nimport Chat from './Chat';\r\nimport Carusel from './Carousel';\r\n\r\n\r\nexport default function AgentHome(props) {\r\n    function logout() {\r\n        return fetch('/api/account/logout/');\r\n    }\r\n\r\n    const userDetails = document.addEventListener('load', () => fetch('/api/users/'));\r\n    console.log(userDetails);\r\n    \r\n    return (\r\n        <div className=\"agent-home\">\r\n            <div className=\"left\">\r\n                <AgentStatus agentName={userDetails} />\r\n                <Details />\r\n            </div>\r\n            <div className=\"center\">\r\n                <Chat />\r\n            </div>\r\n            <div className=\"right\">\r\n                <a href=\"/accounts/logout/\">logout</a>\r\n                <Carusel products={props.products} />\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react'\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nexport default function Widget(props) {\r\n    return (\r\n        <div className=\"admin-widget\">\r\n            <h2>{props.label}</h2>\r\n            <h1> {props.amount}</h1>\r\n            <div> <AccountCircleIcon fontSize='large'/> </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid } from 'recharts'\r\n\r\nconst data = [{ name: 'Page A', uv: 200, pv: 2400, amt: 2400 }, { name: 'Page B', uv: 600, pv: 2400, amt: 2400 }, { name: 'Page A', uv: 1500, pv: 2400, amt: 2400 }, { name: 'Page A', uv: 400, pv: 2400, amt: 2400 }, { name: 'Page A', uv: 200, pv: 2400, amt: 2400 },];\r\n\r\n\r\nexport default function chart() {\r\n    return (\r\n        <div>\r\n            <LineChart width={950} height={300} data={data}>\r\n                <XAxis dataKey=\"name\" />\r\n                <YAxis />\r\n                <CartesianGrid stroke=\"#eee\" strokeDasharray=\"5 5\" />\r\n                <Line type=\"monotone\" dataKey=\"uv\" stroke=\"#8884d8\" />\r\n                <Line type=\"monotone\" dataKey=\"pv\" stroke=\"#82ca9d\" />\r\n            </LineChart>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport Widget from './Widget'\r\nimport Chart from './chart'\r\n\r\nexport default function Main() {\r\n    const data = [\r\n        {\r\n            label: 'Logged in agents',\r\n            amount: 2,\r\n        },\r\n        {\r\n            label: 'Logged in agents',\r\n            amount: 2,\r\n        },\r\n        {\r\n            label: 'Logged in agents',\r\n            amount: 2,\r\n        },\r\n        {\r\n            label: 'Logged in agents',\r\n            amount: 2,\r\n        },\r\n        {\r\n            label: 'Logged in agents',\r\n            amount: 2,\r\n        },\r\n\r\n\r\n\r\n\r\n    ]\r\n    return (\r\n        <div>\r\n            <div className=\"widgets-header\">\r\n                {data.map((widget) => {\r\n                    return (<Widget label={widget.label} amount={widget.amount} />)\r\n                })}\r\n            </div>\r\n            <div>\r\n                <Chart></Chart>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Main from './Main'\r\nimport '../../Admin.css'\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  drawer: {\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: drawerWidth,\r\n      flexShrink: 0,\r\n    },\r\n  },\r\n  appBar: {\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: `calc(100% - ${drawerWidth}px)`,\r\n      marginLeft: drawerWidth,\r\n    },\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n    [theme.breakpoints.up('sm')]: {\r\n      display: 'none',\r\n    },\r\n  },\r\n  toolbar: theme.mixins.toolbar,\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nfunction ResponsiveDrawer(props) {\r\n  const { container } = props;\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [mobileOpen, setMobileOpen] = React.useState(false);\r\n\r\n  const handleDrawerToggle = () => {\r\n    setMobileOpen(!mobileOpen);\r\n  };\r\n\r\n  const drawer = (\r\n    <div>\r\n      <div className={classes.toolbar} />\r\n      <Divider />\r\n      <List>\r\n        {['Home', 'Enterprises', 'Agents', 'Reports'].map((text, index) => (\r\n          <ListItem button key={text}>\r\n            <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n            <ListItemText primary={text} />\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n      <Divider />\r\n      <List>\r\n        {['All mail', 'Trash', 'Spam'].map((text, index) => (\r\n          <ListItem button key={text}>\r\n            <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n            <ListItemText primary={text} />\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar position=\"fixed\" className={classes.appBar}>\r\n          \r\n        <Toolbar>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            edge=\"start\"\r\n            onClick={handleDrawerToggle}\r\n            className={classes.menuButton}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" noWrap>\r\n            Nespresso Callaby admin\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <nav className={classes.drawer} aria-label=\"mailbox folders\">\r\n        {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\r\n        <Hidden smUp implementation=\"css\">\r\n          <Drawer\r\n            container={container}\r\n            variant=\"temporary\"\r\n            anchor={theme.direction === 'rtl' ? 'right' : 'left'}\r\n            open={mobileOpen}\r\n            onClose={handleDrawerToggle}\r\n            classes={{\r\n              paper: classes.drawerPaper,\r\n            }}\r\n            ModalProps={{\r\n              keepMounted: true, // Better open performance on mobile.\r\n            }}\r\n          >\r\n            {drawer}\r\n          </Drawer>\r\n        </Hidden>\r\n        <Hidden xsDown implementation=\"css\">\r\n          <Drawer\r\n            classes={{\r\n              paper: classes.drawerPaper,\r\n            }}\r\n            variant=\"permanent\"\r\n            open\r\n          >\r\n            {drawer}\r\n          </Drawer>\r\n        </Hidden>\r\n      </nav>\r\n      <div className=\"admin-content\">\r\n     <Main></Main>\r\n     </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nResponsiveDrawer.propTypes = {\r\n  /**\r\n   * Injected by the documentation to work in an iframe.\r\n   * You won't need it on your project.\r\n   */\r\n  container: PropTypes.instanceOf(typeof Element === 'undefined' ? Object : Element),\r\n};\r\n\r\nexport default ResponsiveDrawer;\r\n","/* eslint-disable react/destructuring-assignment */\n/* eslint-disable react/jsx-filename-extension */\nimport React, { Component } from 'react';\nimport Login from './components/Login';\nimport AgentHome from './components/AgentHome';\nimport './App.css';\nimport products from './Data/products.json';\nimport Admin from './components/admin/AdminHome';\n\nexport default class App extends Component {\n    constructor() {\n        super();\n        this.state = {\n            products,\n            role: 1,\n        };\n    }\n\n    toggleLogin() {\n        this.setState((state) => ({ loggedIn: !state.loggedIn }));\n    }\n\n    render() {\n        return (\n            <div className=\"container\">\n                {\n                    this.state.role === 1\n                        ? <AgentHome products={this.state.products} />\n                        : <Admin role={this.state.role} />\n                    //  <Login toggleLogin={() => this.toggleLogin()}></Login>\n                }\n            </div>\n        );\n    }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}